{"ast":null,"code":"import _defineProperty from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import $ from'jquery';import'../stylesheets/FormView.css';var FormView=/*#__PURE__*/function(_Component){_inherits(FormView,_Component);var _super=_createSuper(FormView);function FormView(props){var _this;_classCallCheck(this,FormView);_this=_super.call(this);_this.submitQuestion=function(event){event.preventDefault();$.ajax({url:'/questions',//TODO: update request URL\ntype:\"POST\",dataType:'json',contentType:'application/json',data:JSON.stringify({question:_this.state.question,answer:_this.state.answer,difficulty:_this.state.difficulty,category:_this.state.category}),xhrFields:{withCredentials:true},crossDomain:true,success:function success(result){document.getElementById(\"add-question-form\").reset();return;},error:function error(_error){alert('Unable to add question. Please try your request again');return;}});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.state={question:\"\",answer:\"\",difficulty:1,category:1,categories:{}};return _this;}_createClass(FormView,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;$.ajax({url:\"/categories\",//TODO: update request URL\ntype:\"GET\",success:function success(result){_this2.setState({categories:result.categories});return;},error:function error(_error2){alert('Unable to load categories. Please try your request again');return;}});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{id:\"add-form\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Add a New Trivia Question\"),/*#__PURE__*/React.createElement(\"form\",{className:\"form-view\",id:\"add-question-form\",onSubmit:this.submitQuestion},/*#__PURE__*/React.createElement(\"label\",null,\"Question\",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"question\",onChange:this.handleChange})),/*#__PURE__*/React.createElement(\"label\",null,\"Answer\",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"answer\",onChange:this.handleChange})),/*#__PURE__*/React.createElement(\"label\",null,\"Difficulty\",/*#__PURE__*/React.createElement(\"select\",{name:\"difficulty\",onChange:this.handleChange},/*#__PURE__*/React.createElement(\"option\",{value:\"1\"},\"1\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2\"},\"2\"),/*#__PURE__*/React.createElement(\"option\",{value:\"3\"},\"3\"),/*#__PURE__*/React.createElement(\"option\",{value:\"4\"},\"4\"),/*#__PURE__*/React.createElement(\"option\",{value:\"5\"},\"5\"))),/*#__PURE__*/React.createElement(\"label\",null,\"Category\",/*#__PURE__*/React.createElement(\"select\",{name:\"category\",onChange:this.handleChange},Object.keys(this.state.categories).map(function(id){return/*#__PURE__*/React.createElement(\"option\",{key:id,value:id},_this3.state.categories[id]);}))),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"button\",value:\"Submit\"})));}}]);return FormView;}(Component);export default FormView;","map":{"version":3,"sources":["/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/src/components/FormView.js"],"names":["React","Component","$","FormView","props","submitQuestion","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","target","name","value","categories","Object","keys","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `/categories`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again')\n        return;\n      }\n    })\n  }\n\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/questions', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById(\"add-question-form\").reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add question. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  render() {\n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Trivia Question</h2>\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\n          <label>\n            Question\n            <input type=\"text\" name=\"question\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Answer\n            <input type=\"text\" name=\"answer\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" onChange={this.handleChange}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name=\"category\" onChange={this.handleChange}>\n              {Object.keys(this.state.categories).map(id => {\n                  return (\n                    <option key={id} value={id}>{this.state.categories[id]}</option>\n                  )\n                })}\n            </select>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n"]},"metadata":{},"sourceType":"module"}