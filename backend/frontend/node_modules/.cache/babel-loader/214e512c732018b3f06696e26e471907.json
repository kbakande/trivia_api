{"ast":null,"code":"import _classCallCheck from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'../stylesheets/App.css';import Question from'./Question';import Search from'./Search';import $ from'jquery';var QuestionView=/*#__PURE__*/function(_Component){_inherits(QuestionView,_Component);var _super=_createSuper(QuestionView);function QuestionView(){var _this;_classCallCheck(this,QuestionView);_this=_super.call(this);_this.getQuestions=function(){$.ajax({url:\"/questions?page=\".concat(_this.state.page),//TODO: update request URL\ntype:\"GET\",success:function success(result){_this.setState({questions:result.questions,totalQuestions:result.total_questions,categories:result.categories,currentCategory:result.current_category});return;},error:function error(_error){alert('Unable to load questions. Please try your request again');return;}});};_this.getByCategory=function(id){$.ajax({url:\"/categories/\".concat(id,\"/questions\"),//TODO: update request URL\ntype:\"GET\",success:function success(result){_this.setState({questions:result.questions,totalQuestions:result.total_questions,currentCategory:result.current_category});return;},error:function error(_error2){alert('Unable to load questions. Please try your request again');return;}});};_this.submitSearch=function(searchTerm){$.ajax({url:\"/search_questions\",//TODO: update request URL\ntype:\"POST\",dataType:'json',contentType:'application/json',data:JSON.stringify({searchTerm:searchTerm}),xhrFields:{withCredentials:true},crossDomain:true,success:function success(result){_this.setState({questions:result.questions,totalQuestions:result.total_questions,currentCategory:result.current_category});return;},error:function error(_error3){alert('Unable to load questions. Please try your request again');return;}});};_this.questionAction=function(id){return function(action){if(action==='DELETE'){if(window.confirm('are you sure you want to delete the question?')){$.ajax({url:\"/questions/\".concat(id),//TODO: update request URL\ntype:\"DELETE\",success:function success(result){_this.getQuestions();},error:function error(_error4){alert('Unable to load questions. Please try your request again');return;}});}}};};_this.state={questions:[],page:1,totalQuestions:0,categories:{},currentCategory:null};return _this;}_createClass(QuestionView,[{key:\"componentDidMount\",value:function componentDidMount(){this.getQuestions();}},{key:\"selectPage\",value:function selectPage(num){var _this2=this;this.setState({page:num},function(){return _this2.getQuestions();});}},{key:\"createPagination\",value:function createPagination(){var _this3=this;var pageNumbers=[];var maxPage=Math.ceil(this.state.totalQuestions/10);var _loop=function _loop(i){pageNumbers.push(/*#__PURE__*/React.createElement(\"span\",{key:i,className:\"page-num \".concat(i===_this3.state.page?'active':''),onClick:function onClick(){_this3.selectPage(i);}},i));};for(var i=1;i<=maxPage;i++){_loop(i);}return pageNumbers;}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"question-view\"},/*#__PURE__*/React.createElement(\"div\",{className:\"categories-list\"},/*#__PURE__*/React.createElement(\"h2\",{onClick:function onClick(){_this4.getQuestions();}},\"Categories\"),/*#__PURE__*/React.createElement(\"ul\",null,Object.keys(this.state.categories).map(function(id){return/*#__PURE__*/React.createElement(\"li\",{key:id,onClick:function onClick(){_this4.getByCategory(id);}},_this4.state.categories[id],/*#__PURE__*/React.createElement(\"img\",{className:\"category\",src:\"\".concat(_this4.state.categories[id],\".svg\")}));})),/*#__PURE__*/React.createElement(Search,{submitSearch:this.submitSearch})),/*#__PURE__*/React.createElement(\"div\",{className:\"questions-list\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Questions\"),this.state.questions.map(function(q,ind){return/*#__PURE__*/React.createElement(Question,{key:q.id,question:q.question,answer:q.answer,category:_this4.state.categories[q.category],difficulty:q.difficulty,questionAction:_this4.questionAction(q.id)});}),/*#__PURE__*/React.createElement(\"div\",{className:\"pagination-menu\"},this.createPagination())));}}]);return QuestionView;}(Component);export default QuestionView;","map":{"version":3,"sources":["/Users/ko-akande/OneDrive - UWE Bristol (Staff)/Personal/udacity_projects/trivia_api/frontend/src/components/QuestionView.js"],"names":["React","Component","Question","Search","$","QuestionView","getQuestions","ajax","url","state","page","type","success","result","setState","questions","totalQuestions","total_questions","categories","currentCategory","current_category","error","alert","getByCategory","id","submitSearch","searchTerm","dataType","contentType","data","JSON","stringify","xhrFields","withCredentials","crossDomain","questionAction","action","window","confirm","num","pageNumbers","maxPage","Math","ceil","i","push","selectPage","Object","keys","map","q","ind","question","answer","category","difficulty","createPagination"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor(){\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    }\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `/questions?page=${this.state.page}`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  selectPage(num) {\n    this.setState({page: num}, () => this.getQuestions());\n  }\n\n  createPagination(){\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10)\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {this.selectPage(i)}}>{i}\n        </span>)\n    }\n    return pageNumbers;\n  }\n\n  getByCategory= (id) => {\n    $.ajax({\n      url: `/categories/${id}/questions`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `/search_questions`, //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({searchTerm: searchTerm}),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  questionAction = (id) => (action) => {\n    if(action === 'DELETE') {\n      if(window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/questions/${id}`, //TODO: update request URL\n          type: \"DELETE\",\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again')\n            return;\n          }\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"question-view\">\n        <div className=\"categories-list\">\n          <h2 onClick={() => {this.getQuestions()}}>Categories</h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id, ) => (\n              <li key={id} onClick={() => {this.getByCategory(id)}}>\n                {this.state.categories[id]}\n                <img className=\"category\" src={`${this.state.categories[id]}.svg`}/>\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch}/>\n        </div>\n        <div className=\"questions-list\">\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]} \n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className=\"pagination-menu\">\n            {this.createPagination()}\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n"]},"metadata":{},"sourceType":"module"}